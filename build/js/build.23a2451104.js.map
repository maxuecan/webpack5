{"version":3,"file":"js/build.23a2451104.js","mappings":"6HAgBAA,QAAQC,IAAIC,KAEZ,MAAMC,EAAMA,CAACC,EAAGC,IAAMD,EAAIC,EAC1BL,QAAQC,IAAIE,EAAI,EAAG,IAGnB,MAAMG,EAAU,IAAIC,SAASC,IAC3BC,YAAW,KACTT,QAAQC,IAAI,YACZO,GAAS,GACR,IAAK,IAEVR,QAAQC,IAAIK,GAIZN,QAAQC,IAAIE,EAAI,EAAG,IA4Bf,kBAAmBO,WACrBC,OAAOC,iBAAiB,QAAQ,KAC9BF,UAAUG,cAAcC,SAAS,sBAAsBC,MAAKC,IAC1DhB,QAAQC,IAAI,kBAAmBe,EAAa,IAC3CC,OAAMC,IACPlB,QAAQC,IAAI,2BAA4BiB,EAAkB,GAC1D,G","sources":["webpack://webpack5/./src/js/index.js"],"sourcesContent":["/*\n * @Author: your name\n * @Date: 2020-10-04 15:46:42\n * @LastEditTime: 2022-08-14 21:13:18\n * @LastEditors: maxuecan 623875282@qq.com\n * @Description: In User Settings Edit\n * @FilePath: \\webpack\\13.js语法检查\\src\\js\\index.js\n */\n// import '@babel/polyfill'\n// eslint-disable-next-line\n// import 'core-js'\nimport $ from 'jquery';\nimport '../css/a.css';\nimport '../css/b.css';\nimport '../css/c.css';\n\nconsole.log($);\n\nconst add = (x, y) => x + y;\nconsole.log(add(3, 4));\n\n// eslint-disable-next-line\nconst promise = new Promise((resolve) => {\n  setTimeout(() => {\n    console.log('定时器执行完了~');\n    resolve();\n  }, 1000);\n});\nconsole.log(promise);\n\n// 下一行eslint所有规则都失效（下一行不进行检查）\n// eslint-disable-next-line\nconsole.log(add(3, 4));\n\n// Code Split\n// 通过js代码，让某个文件被单独打包成一个chunk\n// import 动态导入语法：能将某个文件单独打包\n// import(/* webpackChunkName: 'test' */'./test')\n//   .then(({mul, count})=>{\n//     // 文件加载成功~\n//     // eslint-disable-next-line\n//     console.log(mul(2, 5));\n//   })\n//   .catch(()=>{\n//     // eslint-disable-next-line\n//     console.log(\"文件加载失败~\");\n//   });\n\n// Lazy Loading\n// document.getElementById('btn').onclick = function() {\n//   // console.log(mul(4,5))\n\n//   // 懒加载~：当文件需要使用时才加载~\n//   // 预加载 prefetch：会在使用之前，提前加载js文件\n//   // 正常加载可以认为是并行加载（同一时间加载多个文件）预加载prefetch：等其它资源加载完毕，浏览器空闲了，再偷偷加载资源\n//   import(/* webpackChunkName: 'test', webpackPrefetch: true */'./test').then(({ mul }) => {\n//     console.log(mul(4,5));\n//   });\n// };\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', () => {\n    navigator.serviceWorker.register('/service-worker.js').then(registration => {\n      console.log('SW registered: ', registration);\n    }).catch(registrationError => {\n      console.log('SW registration failed: ', registrationError);\n    });\n  });\n}"],"names":["console","log","$","add","x","y","promise","Promise","resolve","setTimeout","navigator","window","addEventListener","serviceWorker","register","then","registration","catch","registrationError"],"sourceRoot":""}